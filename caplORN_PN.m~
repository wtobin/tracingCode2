% This script is intended to address the following item from my wfly1
% analysis to-do list: 1) are contralateral ORN synapses more distal than ipsi ORN synapses across PNs?


% Load annotations json. Generated by Wei's code gen_annotation_map.py
annotations=loadjson('~/tracing/sid_by_annotation.json');

% Return all skeleton IDs for R and L ORNs

ORNs_Left=annotations.Left_0x20_ORN;
ORNs_Right=annotations.Right_0x20_ORN;


%return all skeleton IDs of DM6 PNs
PNs=annotations.DM6_0x20_PN;

% Loop over each PN and calculate the contact averaged path length for each
% ORN. I would like to compare ipsi and contra.

for c=1:length(PNs)
    
   
    
    %Load the PN skeleton into the workspace
    workingPN=loadjson(strcat('~/tracing/skeletons/', num2str(PNs(c)),'.json'));
    
    % generate an adjacency matrix indicating skeleton node connectivity
    [ edgeMatrix, verts ] = getSkelAdjMat_DW_ORN( workingPN );
    
    %Find its primary branch point
    
   
    for i=1:length(verts);
        if isempty(workingPN.vertices.(cell2mat(verts(i))).labels) == 1
            
        elseif strcmp(cell2mat(workingPN.vertices.(cell2mat(verts(i))).labels), 'soma') == 1
           
            integrator=verts(i);
        else
            
        end
    end
   

    
    %Loop over ORNs and for each one calculate the contact averaged path
    %length to root
    
    for o=1:length(ORNs_Left);
        
        workingORN=ORNs_Left(o);
        inputSyns=getSynapseVerts(workingPN,workingORN);
        
        %Contact Averaged Path Lengths (CAPLs) calculated and stored
        [CAPL_Left(c,o), std, indLengths,paths]=meanPathToIntegrator(workingPN,edgeMatrix,verts,inputSyns,integrator);
        
    end
    
    for o=1:length(ORNs_Right);
        
        workingORN=ORNs_Right(o);
        inputSyns=getSynapseVerts(workingPN,workingORN);
        
        %Contact Averaged Path Lengths (CAPLs) calculated and stored
        [CAPL_Right(c,o), std, indLengths,paths]=meanPathToIntegrator(workingPN,edgeMatrix,verts,inputSyns,integrator);
        
    end
    
end
    



%% shuffling and equalizing contact num PN1LS ONLY

    
    %Load the PN skeleton into the workspace
    workingPN=loadjson(strcat('~/tracing/skeletons/', num2str(PNs(2)),'.json'));
    
    % generate an adjacency matrix indicating skeleton node connectivity
    [ edgeMatrix, verts ] = getSkelAdjMat_DW_ORN( workingPN );
    
    %Find its primary branch point
    
   
    for i=1:length(verts);
        if isempty(workingPN.vertices.(cell2mat(verts(i))).labels) == 1
            
        elseif strcmp(cell2mat(workingPN.vertices.(cell2mat(verts(i))).labels), 'soma') == 1
           
            integrator=verts(i);
        else
            
        end
    end
   
for reps=1:100
    
    %Loop over ORNs and for each one calculate the contact averaged path
    %length to root
    ornContacts=[];
    
    for o=1:length(ORNs_Left);
        
        workingORN=ORNs_Left(o);
        inputSyns=getSynapseVerts(workingPN,workingORN);
        ornContacts=[ornContacts;inputSyns'];
        
    end
    

%shuffle the rows of inputSyns
ornContacts=ornContacts(randperm(size(ornContacts,1),size(ornContacts,1)),:);
counter=1;

for e=1:floor(size(ornContacts,1)/numel(ORNs_Left))
    
    for o=1:numel(ORNs_Left)
    
        shuffConORNs{o}(e,:)=ornContacts(counter,:);
        counter=counter+1;
        
    end

end

remainingVerts=ornContacts(counter:end,:);
counter2=1;

for r=randsample([1:numel(ORNs_Left)],numel(remainingVerts))

    shuffConORNs{r}=[shuffConORNs{r};remainingVerts(counter2)]
    counter2=counter2+1;
end
    


    for o=1:size(shuffConORNs,2)

        %Contact Averaged Path Lengths (CAPLs) calculated and stored
        [CAPL_Shuff(reps,o), std(o), indLengths{o},paths{o}]=meanPathToIntegrator(workingPN,edgeMatrix,verts,shuffConORNs{o},integrator);
        
    end
    
    popMeanCAPL(reps)=mean(CAPL_Shuff(reps,:));

   
end
    
    
    
    




%% some plotting
% 
% [v ranks(:,1)]=sort(CAPL(1,:))
% [v ranks(:,2)]=sort(CAPL(2,:))
% [v ranks(:,3)]=sort(CAPL(3,:))
% [v ranks(:,4)]=sort(CAPL(4,:))
% [v ranks(:,5)]=sort(CAPL(5,:))


% Normalize CAPLs for each PN

for i=1:5
norm_CAPL_Left(i,:)=CAPL_Left(i,:)/max(CAPL_Left(i,:));
end


for i=1:5
norm_CAPL_Right(i,:)=CAPL_Right(i,:)/max(CAPL_Right(i,:));
end


% Scatter plot these normalized values against each other

titles={'PN3 LS', 'PN2 LS', 'PN1 RS', 'PN2 RS', 'PN1 LS'};

counter=1;
for i=1:5
    
    for j=1:5
        
        subplot(5,5,counter)
        
        scatter(norm_CAPL_Left(i,:),norm_CAPL_Left(j,:))
        hold on
        scatter(norm_CAPL_Right(i,:),norm_CAPL_Right(j,:), 'r')
        
        xlim([.6 1])
        ylim([.6 1])
        
        counter=counter+1;
        xlabel(titles(i))
        ylabel(titles(j))
        
    end
    
end



% looks like contact averaged path lengths are uncorrelated across PNs

for i=1:10000
    
    shuff_1=randperm(24);
    shuff_2=randperm(24);
    shuffCorr(i)=corr(shuff_1',shuff_2');
    
end

figure()
hist(shuffCorr, 100)

figure()
realCorr=corr(ranks)
hist(unique(realCorr(realCorr~=1)))

titles={'PN3 LS', 'PN2 LS', 'PN1 RS', 'PN2 RS', 'PN1 LS'};

for i=1:length(PNs)
    
    orns=[norm_CAPL_Left(i,:),norm_CAPL_Right(i,:)];
    grps=[zeros(1,length(CAPL_Left)), ones(1,length(CAPL_Right))];
    subplot(2,3,i)
    boxplot(orns,grps, 'notch', 'on', 'labels',{'Left ORNs','Right ORNs'})
    title(titles(i))
    set(gcf,'color','w');
    
end

% plot contact num vs CAPL for each PNs ORN inputs
% numContactsLORNs and numContactsRORNs come from
% wfly1TODO_workingAnalyses.m

titles={'PN3 LS', 'PN2 LS', 'PN1 RS', 'PN2 RS', 'PN1 LS'};

for i=1:length(PNs)
    

    subplot(2,3,i)

    
    scatter(numContactsLORNs(i,:),CAPL_Left(i,:),'k', 'filled')
    hold on
    scatter(numContactsRORNs(i,:),CAPL_Right(i,:),'r', 'filled')
        title(titles(i))
    set(gcf,'color','w');
    xlabel('Contact #')
    ylabel('CAPL')
end


% Boxplot CAPL of ipsi/contra ORN inputs to PNs



titles={'PN3 LS', 'PN2 LS', 'PN1 RS', 'PN2 RS', 'PN1 LS'};

for i=1:length(PNs)
    
    
    subplot(2,3,i)
    
    boxplot([CAPL_Left(i,:),CAPL_Right(i,:)],[zeros(1,length(CAPL_Left(i,:))),ones(1,length(CAPL_Right(i,:)))], 'notch', 'on')
    set(gca,'XTickLabel',['Left ORNs ';'Right ORNs'])
    ylabel('Contact averaged path length')
    title(titles(i))
    set(gcf,'color','w');
    
end



