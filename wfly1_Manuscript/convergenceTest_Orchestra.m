%{
Plan for convergence test on Orchestra.

I want to run this job N times I will then see how many results I need
to look at to get a stable estimate of the mean membrane deflection.

%}

%% Load annotations

% Load annotations json. Generated by Wei's code gen_annotation_map.py
annotations=loadjson('~/tracing/sid_by_annotation.json');

% Return all skeleton IDs for R and L ORNs

ORNs_Left=annotations.Left_0x20_ORN;
ORNs_Right=annotations.Right_0x20_ORN;

ORNs=[ORNs_Left, ORNs_Right];



%%

%Move to the PN1 LS project directory
cd('~/nC_projects/PN1LS_allORNs/')


%make a dir in simulations called convergTest
system('mkdir simulations/convergTest')

% Copy the contents of the generatedNEURON dir to convergTest

system('cp -a generatedNEURON/. simulations/convergTest/')

PN_Names={'PN1LS','PN2LS', 'PN3LS', 'PN1RS', 'PN2RS'};
PN=cell2mat(PN_Names(1));


%path to the dir containing the hoc files to be run
path1=['/home/wft2/nC_projects/',PN,'_allORNs/simulations/convergTest/'];
cd(path1)

%copy vecEvent.mod to this Dir
system('cp /groups/htem/code/neuron/nrn/share/examples/nrniv/netcon/vecevent.mod ./')

%Compile mod files in this Dir
system('/groups/htem/code/neuron/nrn/bin/nrnivmodl')

%run Orchestra version of hocEdsv2 on the hoc file
hocEdCmd=['python ../../../hocEdsv2_Orchestra.py ',PN,'_allORNs.hoc ', PN,'_allORNs'];
system(hocEdCmd)

%replace any remaining paths for the simulation computer with orchestra
%path
system(['sed -i -e ''s#\/home\/simulation\/#\/home\/wft2\/#'' ', PN,'_allORNs.hoc'])



%Save an empty txt file that I will write nrn run commands to
empty=[];
save('runScript.sh','empty','-ascii')



% I want to do this on Orchestra

numReps =100000;

for rep=1:numReps
    
  exeRep(rep)
    
end
