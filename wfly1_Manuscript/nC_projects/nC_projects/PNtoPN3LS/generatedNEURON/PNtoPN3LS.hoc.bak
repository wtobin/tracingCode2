//  ******************************************************
// 
//     File generated by: neuroConstruct v1.7.1
// 
//  ******************************************************

{load_file("nrngui.hoc")}

//  Initialising stopwatch for timing setup

{startsw()}

print ""
print "*****************************************************"
print ""
print "    neuroConstruct generated NEURON simulation "
print "    for project: /home/william/nC_projects/PNtoPN3LS/PNtoPN3LS.ncx "
print ""
print "    Description: neuroConstruct project generated from contents of file: /home/william/PNtoPN3LS.neuroml"
print "    "
print "    The cell positions & network connections in memory reflect the instances in the NetworkML elements of the imported file. Regenerating the network in neuroConstruct nmay lead to a different network structure."
print ""
print "    Simulation Configuration: SimConfig: Default Simulation Configuration "
print "    This is the default configuration of the Cell Groups, stimulations, plots, etc for this project "
print " "
print  "*****************************************************"

strdef pwd
{system("pwd", pwd)}
print ""
print "Current working dir: ", pwd

objectvar allCells
{allCells = new List()}


//  A flag to signal simulation was generated by neuroConstruct 

{nC = 1}


//  Including neuroConstruct utilities file 

{load_file("nCtools.hoc")}

//  Including neuroConstruct cell check file 

{load_file("cellCheck.hoc")}

//  Getting hostname

objref strFuncs
{strFuncs = new StringFunctions()}
strdef host
{system("hostname", host)}
if (strFuncs.len(host)>0) {
    strFuncs.left(host, strFuncs.len(host)-1) 
} else {
    host = "????" 
}


//  Simulation running in serial mode, setting default host id

{hostid = 0}


//  Initializes random-number generator

{use_mcell_ran4(1)}

{mcell_ran4_init(373834117)}

//////////////////////////////////////////////////////////////////////
//   Cell group 0: neuron_PN3_LS_sk_668267 has cells of type: neuron_PN3_LS_sk_668267
//////////////////////////////////////////////////////////////////////


//  Adding cell template file: neuron_PN3_LS_sk_668267.hoc for cell group neuron_PN3_LS_sk_668267

{ load_file("neuron_PN3_LS_sk_668267.hoc") }

//  Adding 1 cells of type neuron_PN3_LS_sk_668267 in region neuron_PN3_LS_sk_668267_region

{n_neuron_PN3_LS_sk_668267 = 1}

{n_neuron_PN3_LS_sk_668267_local = 0 } // actual number created on this host

objectvar a_neuron_PN3_LS_sk_668267[n_neuron_PN3_LS_sk_668267]

proc addCell_neuron_PN3_LS_sk_668267() {
    strdef reference
    sprint(reference, "neuron_PN3_LS_sk_668267_%d", $1)
    a_neuron_PN3_LS_sk_668267[$1] = new neuron_PN3_LS_sk_668267(reference, "neuron_PN3_LS_sk_668267", "")
    allCells.append(a_neuron_PN3_LS_sk_668267[$1])
}

for i = 0, n_neuron_PN3_LS_sk_668267-1 {
    addCell_neuron_PN3_LS_sk_668267(i)
    n_neuron_PN3_LS_sk_668267_local = n_neuron_PN3_LS_sk_668267_local +1 

}


//  Placing these cells in a region described by: Rectangular Box from point: (0.0, 0.0, 0.0) to (100.0, 100.0, 100.0)


//  Packing has been generated by: Single cell: (0.0, 0.0, 0.0) (absolute position)

{a_neuron_PN3_LS_sk_668267[0].position(0.0,0.0,0.0)}


//////////////////////////////////////////////////////////////////////
//   Setting initial parameters
//////////////////////////////////////////////////////////////////////

strdef simConfig
{simConfig = "Default Simulation Configuration"}
{celsius = 6.3}



proc initialiseValues0() {


//  Setting initial vals in cell group: neuron_PN3_LS_sk_668267 which has 1 cells


//  Giving all cells an initial potential of: -65.0

    for i = 0, n_neuron_PN3_LS_sk_668267-1 {
        forsec a_neuron_PN3_LS_sk_668267[i].all  v = -65.0

    }

}

objref fih0
{fih0 = new FInitializeHandler(0, "initialiseValues0()")}



//////////////////////////////////////////////////////////////////////
//   Adding Network Connections
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//   Adding 3 stimulation(s)
//////////////////////////////////////////////////////////////////////

n_419138 = 22 // number of individual inputs in 419138

objref spikesource_419138[n_419138]

objref synapse_419138[n_419138]
objref connection_419138[n_419138]
thresh = -20
delay = 0
weight = 1

access a_neuron_PN3_LS_sk_668267[0].c8906 
spikesource_419138[0] = new NetStim(0.95457935)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_419138[0].number = 200.0
spikesource_419138[0].interval = 50.0
spikesource_419138[0].noise = 1.0 
spikesource_419138[0].start = 0 
synapse_419138[0] = new DoubExpSynA(0.95457935) 

//   Inserts synapse 0.5 of way down

connection_419138[0] = new NetCon(spikesource_419138[0], synapse_419138[0], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c8512 
spikesource_419138[1] = new NetStim(0.60759914)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_419138[1].number = 200.0
spikesource_419138[1].interval = 50.0
spikesource_419138[1].noise = 1.0 
spikesource_419138[1].start = 0 
synapse_419138[1] = new DoubExpSynA(0.60759914) 

//   Inserts synapse 0.5 of way down

connection_419138[1] = new NetCon(spikesource_419138[1], synapse_419138[1], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c14674 
spikesource_419138[2] = new NetStim(0.716925)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_419138[2].number = 200.0
spikesource_419138[2].interval = 50.0
spikesource_419138[2].noise = 1.0 
spikesource_419138[2].start = 0 
synapse_419138[2] = new DoubExpSynA(0.716925) 

//   Inserts synapse 0.5 of way down

connection_419138[2] = new NetCon(spikesource_419138[2], synapse_419138[2], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c7834 
spikesource_419138[3] = new NetStim(0.728108)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_419138[3].number = 200.0
spikesource_419138[3].interval = 50.0
spikesource_419138[3].noise = 1.0 
spikesource_419138[3].start = 0 
synapse_419138[3] = new DoubExpSynA(0.728108) 

//   Inserts synapse 0.5 of way down

connection_419138[3] = new NetCon(spikesource_419138[3], synapse_419138[3], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c8530 
spikesource_419138[4] = new NetStim(0.23763771)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_419138[4].number = 200.0
spikesource_419138[4].interval = 50.0
spikesource_419138[4].noise = 1.0 
spikesource_419138[4].start = 0 
synapse_419138[4] = new DoubExpSynA(0.23763771) 

//   Inserts synapse 0.5 of way down

connection_419138[4] = new NetCon(spikesource_419138[4], synapse_419138[4], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c11999 
spikesource_419138[5] = new NetStim(0.5)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_419138[5].number = 200.0
spikesource_419138[5].interval = 50.0
spikesource_419138[5].noise = 1.0 
spikesource_419138[5].start = 0 
synapse_419138[5] = new DoubExpSynA(0.5) 

//   Inserts synapse 0.5 of way down

connection_419138[5] = new NetCon(spikesource_419138[5], synapse_419138[5], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c14243 
spikesource_419138[6] = new NetStim(0.91424817)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_419138[6].number = 200.0
spikesource_419138[6].interval = 50.0
spikesource_419138[6].noise = 1.0 
spikesource_419138[6].start = 0 
synapse_419138[6] = new DoubExpSynA(0.91424817) 

//   Inserts synapse 0.5 of way down

connection_419138[6] = new NetCon(spikesource_419138[6], synapse_419138[6], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c14230 
spikesource_419138[7] = new NetStim(0.25515407)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_419138[7].number = 200.0
spikesource_419138[7].interval = 50.0
spikesource_419138[7].noise = 1.0 
spikesource_419138[7].start = 0 
synapse_419138[7] = new DoubExpSynA(0.25515407) 

//   Inserts synapse 0.5 of way down

connection_419138[7] = new NetCon(spikesource_419138[7], synapse_419138[7], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c14532 
spikesource_419138[8] = new NetStim(0.24736647)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_419138[8].number = 200.0
spikesource_419138[8].interval = 50.0
spikesource_419138[8].noise = 1.0 
spikesource_419138[8].start = 0 
synapse_419138[8] = new DoubExpSynA(0.24736647) 

//   Inserts synapse 0.5 of way down

connection_419138[8] = new NetCon(spikesource_419138[8], synapse_419138[8], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c13749 
spikesource_419138[9] = new NetStim(0.765114)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_419138[9].number = 200.0
spikesource_419138[9].interval = 50.0
spikesource_419138[9].noise = 1.0 
spikesource_419138[9].start = 0 
synapse_419138[9] = new DoubExpSynA(0.765114) 

//   Inserts synapse 0.5 of way down

connection_419138[9] = new NetCon(spikesource_419138[9], synapse_419138[9], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c9545 
spikesource_419138[10] = new NetStim(0.9329248)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_419138[10].number = 200.0
spikesource_419138[10].interval = 50.0
spikesource_419138[10].noise = 1.0 
spikesource_419138[10].start = 0 
synapse_419138[10] = new DoubExpSynA(0.9329248) 

//   Inserts synapse 0.5 of way down

connection_419138[10] = new NetCon(spikesource_419138[10], synapse_419138[10], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c8797 
spikesource_419138[11] = new NetStim(0.965995)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_419138[11].number = 200.0
spikesource_419138[11].interval = 50.0
spikesource_419138[11].noise = 1.0 
spikesource_419138[11].start = 0 
synapse_419138[11] = new DoubExpSynA(0.965995) 

//   Inserts synapse 0.5 of way down

connection_419138[11] = new NetCon(spikesource_419138[11], synapse_419138[11], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c14330 
spikesource_419138[12] = new NetStim(0.693824)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_419138[12].number = 200.0
spikesource_419138[12].interval = 50.0
spikesource_419138[12].noise = 1.0 
spikesource_419138[12].start = 0 
synapse_419138[12] = new DoubExpSynA(0.693824) 

//   Inserts synapse 0.5 of way down

connection_419138[12] = new NetCon(spikesource_419138[12], synapse_419138[12], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c13674 
spikesource_419138[13] = new NetStim(0.5)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_419138[13].number = 200.0
spikesource_419138[13].interval = 50.0
spikesource_419138[13].noise = 1.0 
spikesource_419138[13].start = 0 
synapse_419138[13] = new DoubExpSynA(0.5) 

//   Inserts synapse 0.5 of way down

connection_419138[13] = new NetCon(spikesource_419138[13], synapse_419138[13], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c12600 
spikesource_419138[14] = new NetStim(0.34881148)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_419138[14].number = 200.0
spikesource_419138[14].interval = 50.0
spikesource_419138[14].noise = 1.0 
spikesource_419138[14].start = 0 
synapse_419138[14] = new DoubExpSynA(0.34881148) 

//   Inserts synapse 0.5 of way down

connection_419138[14] = new NetCon(spikesource_419138[14], synapse_419138[14], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c10159 
spikesource_419138[15] = new NetStim(0.72212046)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_419138[15].number = 200.0
spikesource_419138[15].interval = 50.0
spikesource_419138[15].noise = 1.0 
spikesource_419138[15].start = 0 
synapse_419138[15] = new DoubExpSynA(0.72212046) 

//   Inserts synapse 0.5 of way down

connection_419138[15] = new NetCon(spikesource_419138[15], synapse_419138[15], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c8512 
spikesource_419138[16] = new NetStim(0.8023704)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_419138[16].number = 200.0
spikesource_419138[16].interval = 50.0
spikesource_419138[16].noise = 1.0 
spikesource_419138[16].start = 0 
synapse_419138[16] = new DoubExpSynA(0.8023704) 

//   Inserts synapse 0.5 of way down

connection_419138[16] = new NetCon(spikesource_419138[16], synapse_419138[16], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c13051 
spikesource_419138[17] = new NetStim(0.8950649)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_419138[17].number = 200.0
spikesource_419138[17].interval = 50.0
spikesource_419138[17].noise = 1.0 
spikesource_419138[17].start = 0 
synapse_419138[17] = new DoubExpSynA(0.8950649) 

//   Inserts synapse 0.5 of way down

connection_419138[17] = new NetCon(spikesource_419138[17], synapse_419138[17], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c14153 
spikesource_419138[18] = new NetStim(0.8963701)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_419138[18].number = 200.0
spikesource_419138[18].interval = 50.0
spikesource_419138[18].noise = 1.0 
spikesource_419138[18].start = 0 
synapse_419138[18] = new DoubExpSynA(0.8963701) 

//   Inserts synapse 0.5 of way down

connection_419138[18] = new NetCon(spikesource_419138[18], synapse_419138[18], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c13989 
spikesource_419138[19] = new NetStim(0.6123258)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_419138[19].number = 200.0
spikesource_419138[19].interval = 50.0
spikesource_419138[19].noise = 1.0 
spikesource_419138[19].start = 0 
synapse_419138[19] = new DoubExpSynA(0.6123258) 

//   Inserts synapse 0.5 of way down

connection_419138[19] = new NetCon(spikesource_419138[19], synapse_419138[19], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c15020 
spikesource_419138[20] = new NetStim(0.3806837)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_419138[20].number = 200.0
spikesource_419138[20].interval = 50.0
spikesource_419138[20].noise = 1.0 
spikesource_419138[20].start = 0 
synapse_419138[20] = new DoubExpSynA(0.3806837) 

//   Inserts synapse 0.5 of way down

connection_419138[20] = new NetCon(spikesource_419138[20], synapse_419138[20], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c14105 
spikesource_419138[21] = new NetStim(0.6149466)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_419138[21].number = 200.0
spikesource_419138[21].interval = 50.0
spikesource_419138[21].noise = 1.0 
spikesource_419138[21].start = 0 
synapse_419138[21] = new DoubExpSynA(0.6149466) 

//   Inserts synapse 0.5 of way down

connection_419138[21] = new NetCon(spikesource_419138[21], synapse_419138[21], thresh, delay, weight)


n_427345 = 5 // number of individual inputs in 427345

objref spikesource_427345[n_427345]

objref synapse_427345[n_427345]
objref connection_427345[n_427345]
thresh = -20
delay = 0
weight = 1

access a_neuron_PN3_LS_sk_668267[0].c13082 
spikesource_427345[0] = new NetStim(0.36718047)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_427345[0].number = 200.0
spikesource_427345[0].interval = 50.0
spikesource_427345[0].noise = 1.0 
spikesource_427345[0].start = 0 
synapse_427345[0] = new DoubExpSynA(0.36718047) 

//   Inserts synapse 0.5 of way down

connection_427345[0] = new NetCon(spikesource_427345[0], synapse_427345[0], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c13082 
spikesource_427345[1] = new NetStim(0.71035683)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_427345[1].number = 200.0
spikesource_427345[1].interval = 50.0
spikesource_427345[1].noise = 1.0 
spikesource_427345[1].start = 0 
synapse_427345[1] = new DoubExpSynA(0.71035683) 

//   Inserts synapse 0.5 of way down

connection_427345[1] = new NetCon(spikesource_427345[1], synapse_427345[1], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c15393 
spikesource_427345[2] = new NetStim(0.34950978)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_427345[2].number = 200.0
spikesource_427345[2].interval = 50.0
spikesource_427345[2].noise = 1.0 
spikesource_427345[2].start = 0 
synapse_427345[2] = new DoubExpSynA(0.34950978) 

//   Inserts synapse 0.5 of way down

connection_427345[2] = new NetCon(spikesource_427345[2], synapse_427345[2], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c12472 
spikesource_427345[3] = new NetStim(0.20975837)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_427345[3].number = 200.0
spikesource_427345[3].interval = 50.0
spikesource_427345[3].noise = 1.0 
spikesource_427345[3].start = 0 
synapse_427345[3] = new DoubExpSynA(0.20975837) 

//   Inserts synapse 0.5 of way down

connection_427345[3] = new NetCon(spikesource_427345[3], synapse_427345[3], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c13878 
spikesource_427345[4] = new NetStim(0.7026349)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_427345[4].number = 200.0
spikesource_427345[4].interval = 50.0
spikesource_427345[4].noise = 1.0 
spikesource_427345[4].start = 0 
synapse_427345[4] = new DoubExpSynA(0.7026349) 

//   Inserts synapse 0.5 of way down

connection_427345[4] = new NetCon(spikesource_427345[4], synapse_427345[4], thresh, delay, weight)


n_668267 = 4 // number of individual inputs in 668267

objref spikesource_668267[n_668267]

objref synapse_668267[n_668267]
objref connection_668267[n_668267]
thresh = -20
delay = 0
weight = 1

access a_neuron_PN3_LS_sk_668267[0].c13929 
spikesource_668267[0] = new NetStim(0.9834202)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_668267[0].number = 200.0
spikesource_668267[0].interval = 50.0
spikesource_668267[0].noise = 1.0 
spikesource_668267[0].start = 0 
synapse_668267[0] = new DoubExpSynA(0.9834202) 

//   Inserts synapse 0.5 of way down

connection_668267[0] = new NetCon(spikesource_668267[0], synapse_668267[0], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c13363 
spikesource_668267[1] = new NetStim(0.95636725)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_668267[1].number = 200.0
spikesource_668267[1].interval = 50.0
spikesource_668267[1].noise = 1.0 
spikesource_668267[1].start = 0 
synapse_668267[1] = new DoubExpSynA(0.95636725) 

//   Inserts synapse 0.5 of way down

connection_668267[1] = new NetCon(spikesource_668267[1], synapse_668267[1], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c10980 
spikesource_668267[2] = new NetStim(0.75774384)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_668267[2].number = 200.0
spikesource_668267[2].interval = 50.0
spikesource_668267[2].noise = 1.0 
spikesource_668267[2].start = 0 
synapse_668267[2] = new DoubExpSynA(0.75774384) 

//   Inserts synapse 0.5 of way down

connection_668267[2] = new NetCon(spikesource_668267[2], synapse_668267[2], thresh, delay, weight)


access a_neuron_PN3_LS_sk_668267[0].c13035 
spikesource_668267[3] = new NetStim(0.80163884)

//  NOTE: This is a very rough way to get an average rate of 0.02 kHz!!!
spikesource_668267[3].number = 200.0
spikesource_668267[3].interval = 50.0
spikesource_668267[3].noise = 1.0 
spikesource_668267[3].start = 0 
synapse_668267[3] = new DoubExpSynA(0.80163884) 

//   Inserts synapse 0.5 of way down

connection_668267[3] = new NetCon(spikesource_668267[3], synapse_668267[3], thresh, delay, weight)



access neuron_PN3_LS_sk_668267[0].c2

//////////////////////////////////////////////////////////////////////
//   Settings for running the demo
//////////////////////////////////////////////////////////////////////


tstop = 100.0
dt = 0.025
steps_per_ms = 40.0

//////////////////////////////////////////////////////////////////////
//   Adding 1 plot(s)
//////////////////////////////////////////////////////////////////////


//   This code pops up a plot of a_neuron_PN3_LS_sk_668267[0].c2.v(0.5)

objref neuron_PN3_LS_sk_668267_g
neuron_PN3_LS_sk_668267_g = new Graph(0)
{neuron_PN3_LS_sk_668267_g.size(0, tstop,-90.0,50.0)}
{neuron_PN3_LS_sk_668267_g.view(0, -90.0, tstop, 140.0, 80, 330, 330, 250)}
{
    neuron_PN3_LS_sk_668267_g.addexpr("a_neuron_PN3_LS_sk_668267[0].c2.v", "a_neuron_PN3_LS_sk_668267[0].c2.v(0.5)", 1, 1, 0.8, 0.9, 2)
    graphList[0].append(neuron_PN3_LS_sk_668267_g)
}

//////////////////////////////////////////////////////////////////////
//   This will run a full simulation of 4001 steps when the hoc file is executed
//////////////////////////////////////////////////////////////////////


//  Recording 1 variable(s)

objref v_time
objref f_time
objref propsFile

v_time = new Vector()
{ v_time.record(&t) }
{ v_time.resize(4001) } // false
f_time = new File()


//  Saving VOLTAGE on only one seg, id: 0, in the only cell in neuron_PN3_LS_sk_668267


//  Creating vector for segment: s1(ID: 0)

objref v_neuron_PN3_LS_sk_668267_seg_s1_v[1]
for i=0, 0 {
    { v_neuron_PN3_LS_sk_668267_seg_s1_v[i] = new Vector() }
    { v_neuron_PN3_LS_sk_668267_seg_s1_v[i].record(&a_neuron_PN3_LS_sk_668267[i].c2.v(0.5))} 
    { v_neuron_PN3_LS_sk_668267_seg_s1_v[i].resize(4001) }
}
objref f_neuron_PN3_LS_sk_668267_seg_s1_v[1]

strdef simReference
simReference = "Sim_1"



strdef simsDir
simsDir = "/home/william/nC_projects/PNtoPN3LS/simulations/"


//  Note: to change location of the generated simulation files, just change value of targetDir
//  e.g. targetDir="" or targetDir="aSubDir/"

strdef targetDir
{ sprint(targetDir, "%s%s/", simsDir, simReference)}


//  Single simulation run...

strdef date
// Note: not showing date/time of start/stop of simulation. This requires Cygwin to be installed// which includes the "date" unix command. Install under c:\cygwin

setuptime = stopsw()

print "Setup time for simulation: ",setuptime," seconds"

print "Starting simulation of duration ",tstop,"ms, dt: ",dt,"ms, reference: ",simReference,""

{currenttime = startsw()}
//////////////////////////////////////////////////////////////////////
//   Main run statement
//////////////////////////////////////////////////////////////////////

{run()}

{realruntime = startsw() - currenttime}
print "Finished simulation in ", realruntime ,"seconds"

print "Storing the data..."

strdef timeFilename

//  Saving VOLTAGE on only one seg, id: 0, in the only cell in neuron_PN3_LS_sk_668267


//  Saving vector for segment: s1(ID: 0)

for i=0, 0 {
    f_neuron_PN3_LS_sk_668267_seg_s1_v[i] = new File()
    strdef filename
    {sprint(filename, "%sneuron_PN3_LS_sk_668267_%d.dat", targetDir, i)}
    f_neuron_PN3_LS_sk_668267_seg_s1_v[i].wopen(filename)
    v_neuron_PN3_LS_sk_668267_seg_s1_v[i].printf(f_neuron_PN3_LS_sk_668267_seg_s1_v[i])
    f_neuron_PN3_LS_sk_668267_seg_s1_v[i].close()
}


{ sprint(timeFilename, "%s%s", targetDir, "time.dat")}
{ f_time.wopen(timeFilename) }
{ v_time.printf(f_time) }
{ f_time.close() }

{savetime = stopsw()}

propsFile = new File()
strdef propsFilename
{sprint(propsFilename, "%ssimulator.props", targetDir)}
{propsFile.wopen(propsFilename)}
{propsFile.printf("#This is a list of properties generated by NEURON during the simulation run\n")}
{propsFile.printf("Host=%s\n", host)}
{propsFile.printf("RealSimulationTime=%g\n", realruntime)}
{propsFile.printf("SimulationSaveTime=%g\n", savetime)}
{propsFile.printf("SimulationSetupTime=%g\n", setuptime)}
{propsFile.printf("NEURONversion=%s\n", nrnversion())}
{propsFile.close()}

print "Data stored in ",savetime, "secs in directory: ", targetDir


//   This code pops up a simple Run Control

{
xpanel("RunControl", 0)
v_init = -60.0
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
t = 0
xvalue("t","t", 2 )
tstop = 100.0
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.025
 xvalue("dt","dt", 1,"setdt()", 0, 1 )
xpanel(80,80)
}

