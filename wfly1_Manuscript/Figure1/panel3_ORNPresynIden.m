% The goal here is to generate a pie chart of input profile identity for
% PNs

%% Load annotations and connectors

% Load annotations json. Generated by Wei's code gen_annotation_map.py
annotations=loadjson('~/tracing/sid_by_annotation.json');

% Return all skeleton IDs for R and L ORNs

ORNs_Left=annotations.Left_0x20_ORN;
ORNs_Right=annotations.Right_0x20_ORN;

%exclude unilateral ORNs for now

ORNs_Right(find(ORNs_Right == 499879))=[];
ORNs_Left(find(ORNs_Left == 426230))=[];
ORNs_Left(find(ORNs_Left == 401378))=[];
% 
% %exclude ORN 8 because it was temporarily unilateral on 8/5 for testing 
% ORNs_Left(find(ORNs_Left == 593865))=[];

%return all skeleton IDs of DM6 PNs
PNs=annotations.PN;

%Load the connector structure
load('~/tracing/conns.mat')

%gen conn fieldname list
connFields=fieldnames(conns);

%% Collect a list of presynaptic profile skeleton IDs for each ORN

ORNs=[ORNs_Left,ORNs_Right];

%Loop over all ORNs

for o=1:length(ORNs)
    
preSkel{o}=[];

%loop over all connectors
for i= 1 : length(connFields)
    
    %Make sure the connector doesnt have an empty presynaptic field
    if isempty(conns.(cell2mat(connFields(i))).pre) == 1 
        
        % or an empty postsynaptic field, if its empty it will be a cell
        
    elseif iscell(conns.(cell2mat(connFields(i))).post) == 1
        
    else
        
        %Check to see if the current ORN is postsynaptic at this connector
        if sum(ismember(ORNs(o), conns.(cell2mat(connFields(i))).post))>=1
            
            %record the presynaptic skel ID once for each time the PN is
            %postsynaptic
            
            for s=1:length(conns.(cell2mat(connFields(i))).post)
                
               
                
                if conns.(cell2mat(connFields(i))).post(s) == ORNs(o)
                    
                    preSkel{o}=[preSkel{o}, conns.(cell2mat(connFields(i))).pre];
                    
                else
                end
            end
           
                
          
        else
        end
    end
end



end

%% This block of code is written to see how many ORN presynaptic profiles have at least one annotation

annFields=fieldnames(annotations);

annSkels=[];

for a=1: length(annFields)
    annSkels=[annSkels, annotations.(cell2mat(annFields(a)))];
end

for o=1:length(ORNs)
    
    for s=1:length(preSkel{o})
       annCheck{o}(s)=ismember(preSkel{o}(s), annSkels);
    end
    
    fractAnn(o)=sum(annCheck{o})/length(preSkel{o})
end



%% Identify annotations associated with each profile presynaptic to each ORN

%collect a list of annotations present in our dataset

annFields=fieldnames(annotations);

% Loop over each PN
for o=1:length(ORNs)
    
    
    %loop over each presynaptic profile
for s=1:length(preSkel{o})
    
    
    % for each annotation
    for a= 1:length(annFields)
        
        if ismember(preSkel{o}(s),annotations.(cell2mat(annFields(a)))) == 1
            annTable{o}(s,a)=1;
        else
            annTable{o}(s,a)=0;
        end
    end
end
end



% Question, how many profiles can be accounted for as ORNs, PNs and LNs?


%for each ORN
for o=1:length(ORNs)
    
    %for each presynaptic profile
    for s=1:length(preSkel{o})
        
        %is it a PN, and LN or an ORN?
        
        % collect indicies of annotations on this presynaptic profile
        k=find(annTable{o}(s,:));
    
        for a=1:length(k)
            
            if isempty(findstr('ORN', cell2mat(annFields(k(a))))) == 0
                
                preSynID{o}(s)=1;
                break
                
            elseif isempty(findstr('LN', cell2mat(annFields(k(a))))) == 0
                
                 preSynID{o}(s)=2;
                break
                
            elseif isempty(findstr('PN', cell2mat(annFields(k(a))))) == 0
                
                 preSynID{o}(s)=3;
                break
                
            else
                 preSynID{o}(s)=4;
                
                
            end
        end
    end
end


%stacked bar chart the averages


%Tally up the identifications



    
for o=1:length(ORNs)
    
    counter=1;
    
  for id=0:4  
    idenCounts(o,counter)=sum(preSynID{o}==id);

   counter=counter+1;
   
  end

end


[v i]=sort(sum(idenCounts), 'descend');

labels={'Unknown','ORN','LN','PN','Unclassified'};
 


%Raw Numbers
figure()
bar(idenCounts(:,i),'stacked');
legend(labels(i),'Location', 'NorthEast')
ax=gca;
ax.FontSize=18;
set(gcf,'color','w')
ylabel('Presynaptic Profile Num')
xlabel('ORNs')

%Fractions

%Normalize the prsynaptic identity counts by tot number of presynaptic
%profiles

for t=1:length(ORNs)
    normIden(t,:)=idenCounts(t,i)./sum(idenCounts(t,i));
end

figure()
bar(normIden,'stacked');
legend(labels(i),'Location', 'NorthEast')

ax=gca;
ax.FontSize=18;
ax.YLim=[0, 1.1];
ax.XLim=[-.2 60]
set(gcf,'color','w')
ylabel('Fraction Presynaptic Profiles')
xlabel('ORNs')

%Pie chart of average across ORNs

figure()
h=pie(mean(normIden));
% title('Average Fractional Input')
set(gcf,'color','w')

textInds=[2:2:10];

for i=1:5
    h(textInds(i)).FontSize=16;
end



