%% Load annotations and connectors
clear

% Load annotations json. Generated by Wei's code gen_annotation_map.py
annotations=loadjson('~/tracing/sid_by_annotation.json');

% Return all skeleton IDs for R and L ORNs

ORNs_Left=annotations.Left_0x20_ORN;
ORNs_Right=annotations.Right_0x20_ORN;

ORNs=[ORNs_Left, ORNs_Right];

%return all skeleton IDs of DM6 PNs
PNs=sort(annotations.DM6_0x20_PN);


% return all skel IDs with *LN* in fieldname
Fn = fieldnames(annotations);
selFn = Fn(~cellfun(@isempty,regexp(Fn,'LN')));

LNs=[];
for i = 1:numel(selFn)
    LNs=[LNs, annotations.(selFn{i})];
end

LNs = unique(LNs);

%Load the connector structure
load('~/tracing/conns.mat')

%gen conn fieldname list
connFields=fieldnames(conns);

%% Determine the number of contacts between all pairs of categorized neurons

%***NOTE*** This should probably be broken out of this script and saved as
%a seperate file

% order leftPNs1-3: 1,2,5 and right PNs1-2: 4,3  % 151230 WCL corresponded to catmaid2

%Find contact numbers for connections where ORNs are presynaptic

% ORN--> PN
% ORN--> LN
% ORN--> ORN

%Loop over ORNs

for o=1:length(ORNs)
    tic 
    % get contact number between each ORN and each PN
    %loop over PNs
    for p=1:length(PNs)
        
        ornToPn(o,p)=getSynapseNum(ORNs(o),PNs(p));
    end
    
    % get contact number between each ORN and each LN
    %loop over LNs
    for l=1:length(LNs)
        
        ornToLn(o,l)=getSynapseNum(ORNs(o),LNs(l));
    end
    
    
    % get contact number between each ORN and each ORN
    %loop over ORNs
    for orn=1:length(ORNs)
        
        ornToOrn(o,orn)=getSynapseNum(ORNs(o),ORNs(orn));
    end
    toc
end

save('ornToPn','ornToPn')
save('ornToLn','ornToLn')
save('ornToOrn','ornToOrn')

%Find contact numbers for connections where PNs are presynaptic

% PN--> PN
% PN--> LN
% PN--> ORN

%Loop over PNs


for o=1:length(PNs)
    tic
    
    % get contact number between each PN and each PN
    %loop over PNs
    for p=1:length(PNs)
        
        pnToPn(o,p)=getSynapseNum(PNs(o),PNs(p));
    end
    
    % get contact number between each PN and each LN
    %loop over LNs
    for l=1:length(LNs)
        
        pnToLn(o,l)=getSynapseNum(PNs(o),LNs(l));
    end
    
    
    % get contact number between each PN and each ORN
    %loop over ORNs
    for orn=1:length(ORNs)
        
        pnToOrn(o,orn)=getSynapseNum(PNs(o),ORNs(orn));
    end
    toc
end

save('pnToPn','pnToPn')
save('pnToLn','pnToLn')
save('pnToOrn','pnToOrn')

%Find contact numbers for connections where LNs are presynaptic

% LN--> PN
% LN--> LN
% LN--> ORN

%Loop over LNs


for o=1:length(LNs)
    tic
    % get contact number between each LN and each PN
    %loop over PNs
    for p=1:length(PNs)
        
        lnToPn(o,p)=getSynapseNum(LNs(o),PNs(p));
    end
    
    % get contact number between each LN and each LN
    %loop over LNs
    for l=1:length(LNs)
        
        lnToLn(o,l)=getSynapseNum(LNs(o),LNs(l));
    end
    
    
    % get contact number between each LN and each ORN
    %loop over ORNs
    for orn=1:length(ORNs)
        
        lnToOrn(o,orn)=getSynapseNum(LNs(o),ORNs(orn));
    end
    toc
end

save('lnToPn','lnToPn')
save('lnToLn','lnToLn')
save('lnToOrn','lnToOrn')

%% Plotting


load('~/Documents/MATLAB/tracingCode2/wfly1_Manuscript_Archive16March2016/ornToPn.mat')
load('~/Documents/MATLAB/tracingCode2/wfly1_Manuscript_Archive16March2016/ornToLn.mat')
load('~/Documents/MATLAB/tracingCode2/wfly1_Manuscript_Archive16March2016/ornToOrn.mat')
% 
% figure()
% set(gcf,'color','w')
% 
% 
% ornUnitaries{1}=ornToPn(find(ornToPn>3));
% ornUnitaries{2}=ornToLn(find(ornToLn>3));
% ornUnitaries{3}=ornToOrn(find(ornToOrn>3));
% 
% subplot(3,1,1)
% 
% for t=1:3
% 
% jitterAmount = 0.25;
% jitterValuesX = 2*(rand(1,length(ornUnitaries{t}))-0.5)*jitterAmount;   % +/-jitterAmount max
% 
% scatter(t*ones(1,length(ornUnitaries{t}))+jitterValuesX,ornUnitaries{t})
% hold on
% 
% end
% 
% ax=gca;
% % ylabel('Connections per Unitary w/ >3 connections')
% ax.XLim=[0 4];
% ax.YLim=[0 60];
% ax.XTick=[1:3];
% ax.XTickLabel={'ORN-->PN','ORN-->LN','ORN-->ORN'};
% ax.FontSize=16;
% 


load('~/Documents/MATLAB/tracingCode2/wfly1_Manuscript_Archive16March2016/pnToPn.mat')
load('~/Documents/MATLAB/tracingCode2/wfly1_Manuscript_Archive16March2016/pnToLn.mat')
load('~/Documents/MATLAB/tracingCode2/wfly1_Manuscript_Archive16March2016/pnToOrn.mat')
%      
% subplot(3,1,2)
% 
% pnUnitaries{1}=pnToPn(find(pnToPn>3));
% pnUnitaries{2}=pnToLn(find(pnToLn>3));
% pnUnitaries{3}=pnToOrn(find(pnToOrn>3));
% 
% 
% for t=1:3
% 
% jitterAmount = 0.25;
% jitterValuesX = 2*(rand(1,length(pnUnitaries{t}))-0.5)*jitterAmount;   % +/-jitterAmount max
% 
% scatter(t*ones(1,length(pnUnitaries{t}))+jitterValuesX,pnUnitaries{t})
% hold on
% 
% end
% 
% ax=gca;
% ylabel('Connections per unitary w/ >3 connections', 'FontSize', 16)
% ax.XLim=[0 4];
% ax.YLim=[0 60];
% ax.XTick=[1:3];
% ax.XTickLabel={'PN-->PN','PN-->LN','PN-->ORN'};
% ax.FontSize=16;
% 
% subplot(3,1,3)

load('~/Documents/MATLAB/tracingCode2/wfly1_Manuscript_Archive16March2016/lnToPn.mat')
load('~/Documents/MATLAB/tracingCode2/wfly1_Manuscript_Archive16March2016/lnToLn.mat')
load('~/Documents/MATLAB/tracingCode2/wfly1_Manuscript_Archive16March2016/lnToOrn.mat')
% 
% lnUnitaries{1}=lnToPn(find(lnToPn>3));
% lnUnitaries{2}=lnToLn(find(lnToLn>3));
% lnUnitaries{3}=lnToOrn(find(lnToOrn>3));
% 
% 
% for t=1:3
% 
% jitterAmount = 0.25;
% jitterValuesX = 2*(rand(1,length(lnUnitaries{t}))-0.5)*jitterAmount;   % +/-jitterAmount max
% 
% scatter(t*ones(1,length(lnUnitaries{t}))+jitterValuesX,lnUnitaries{t})
% hold on
% 
% end
% 
% ax=gca;
% % ylabel('Connections per Unitary w/ >3 connections')
% ax.XLim=[0 4];
% ax.YLim=[0 60];
% ax.XTick=[1:3];
% ax.XTickLabel={'LN-->PN','LN-->LN','LN-->ORN'};
% ax.FontSize=16;

%% Plotting for ORN and PN connections only

figure()
set(gcf,'color','w')


% ornPnUnitaries{1}=ornToPn(find(ornToPn>3));
% ornPnUnitaries{2}=pnToPn(find(pnToPn>3));
% ornPnUnitaries{3}=pnToOrn(find(pnToOrn>3));
% ornPnUnitaries{4}=ornToOrn(find(ornToOrn>3));

%Store ipsi/contra orn-to-pn connection synapse numbers seperately
oToPUnitaries_ipsi=[reshape(ornsToPn(1:27,[1,2,5]),numel(ornsToPn(1:27,[1,2,5])),1);...
    reshape(ornsToPn(28:end,[3,4]),numel(ornsToPn(28:end,[3,4])),1)];

oToPUnitaries_contra=[reshape(ornsToPn(1:27,[3,4]),numel(ornsToPn(1:27,[3,4])),1);...
    reshape(ornsToPn(28:end,[1,2,5]),numel(ornsToPn(28:end,[1,2,5])),1)];

%remove zeros associated w/ the unilateral orns
oToPUnitaries_contra=oToPUnitaries_contra(oToPUnitaries_contra~=0);

%Store all other synapse numbers in a cell array, excluding zeros
ornPnUnitaries{1}=pnToPn(find(pnToPn>0));
ornPnUnitaries{2}=pnToOrn(find(pnToOrn>0));
ornPnUnitaries{3}=ornsToOrn(find(ornsToOrn>0));

%Plot orn-to-pn counts
jitterAmount = 0.25;
jitterValuesX = 2*(rand(1,length([oToPUnitaries_ipsi]))-0.5)*jitterAmount;   %
scatter(ones(1,length(oToPUnitaries_ipsi))+jitterValuesX,oToPUnitaries_ipsi,...
    60,'k') %,[],'k')
hold on

jitterAmount = 0.25;
jitterValuesX = 2*(rand(1,length([oToPUnitaries_contra]))-0.5)*jitterAmount;   %
scatter(ones(1,length(oToPUnitaries_contra))+jitterValuesX,oToPUnitaries_contra,...
    ,'k', 'filled')

for t=1:3

jitterAmount = 0.25;
jitterValuesX = 2*(rand(1,length(ornPnUnitaries{t}))-0.5)*jitterAmount;   % +/-jitterAmount max

scatter((t+1)*ones(1,length(ornPnUnitaries{t}))+jitterValuesX, ornPnUnitaries{t},...
    'k') %,[],'k')

hold on

end

ax=gca;
% ylabel('Connections per unitary (3 conn thresh)')
ylabel('Synapses per unitary connection')
ax.XLim=[0 5];
ax.YLim=[0 60];
ax.XTick=[1:4];
ax.XTickLabel={'ORN-->PN','PN-->PN','PN-->ORN','ORN-->ORN'};
ax.FontSize=18;

saveas(gcf,'uniConNums')
saveas(gcf,'uniConNums','epsc')
