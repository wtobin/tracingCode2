%The goal of this code is to generate a figure showing mean connection density 
% for ipsi and contra output synapses

%% Load annotations and connectors

% Load annotations json. Generated by Wei's code gen_annotation_map.py
annotations=loadjson('~/tracing/sid_by_annotation.json');

% Return all skeleton IDs for R and L ORNs

ORNs_Left=annotations.Left_0x20_ORN;
ORNs_Right=annotations.Right_0x20_ORN;

%exclude unilateral ORNs for now

ORNs=[ORNs_Left, ORNs_Right];

%return all skeleton IDs of DM6 PNs
PNs=sort(annotations.DM6_0x20_PN);

%% Load the axon lengths

%Load the axon length and presynaptic site number data
load('~/Documents/MATLAB/tracingCode2/currentWfly1ManuscriptFigures/Supplamentals/ornOutputSynDensity/leftAxons')
load('~/Documents/MATLAB/tracingCode2/currentWfly1ManuscriptFigures/Supplamentals/ornOutputSynDensity/rightAxons')


% For each ORN calculate its total within glomerulus axon lengths
leftCounter=1;
rightCounter=1;

for p=1:length(ORNs)
    
    leftRunL=[];
    leftRunPS=[];
    
    
    for j=1:size(leftAxons{p},2)
        
        leftRunL=[leftRunL, leftAxons{p}(1,j)];
        leftRunPS=[leftRunPS,leftAxons{p}(2,j)];
        
    end
    
    if isnan(leftRunPS)==1
        
    else
        
        leftLengths(leftCounter)=sum(leftRunL);
        leftPreSites(leftCounter)=sum(leftRunPS);
        leftCounter=leftCounter+1;
        
    end
    
    rightRunL=[];
    rightRunPS=[];
    
    
    for j=1:size(rightAxons{p},2)
        
        rightRunL=[rightRunL, rightAxons{p}(1,j)];
        rightRunPS=[rightRunPS,rightAxons{p}(2,j)];
        
    end
    
    if isnan(rightRunPS)==1
    else
        
        rightLengths(rightCounter)=sum(rightRunL);
        rightPreSites(rightCounter)=sum(rightRunPS);
        rightCounter=rightCounter+1;
    end
end


%% Collect conn nums 

load('~/Documents/MATLAB/tracingCode2/currentWfly1ManuscriptFigures/Supplamentals/ornPNConnDensity/leftAxonConnNums')
load('~/Documents/MATLAB/tracingCode2/currentWfly1ManuscriptFigures/Supplamentals/ornPNConnDensity/rightAxonConnNums')



% For each ORN collect its total number of connections within each
% glomerulus as well as the total number of PN connections

leftCounter=1;
rightCounter=1;

for p=1:length(ORNs)
    
    leftRunT=[];
    leftRunP=[];
    
    
    for j=1:size(leftAxonConnNums{p},2)
        
        leftRunT=[leftRunT, leftAxonConnNums{p}(1,j)];
        leftRunP=[leftRunP,leftAxonConnNums{p}(2,j)];
        
    end
    
    if isnan(leftRunP)==1
        
    else
        
        leftTotCon(leftCounter)=sum(leftRunT);
        leftPNCon(leftCounter)=sum(leftRunP);
        leftCounter=leftCounter+1;
        
    end
    
    rightRunT=[];
    rightRunP=[];
    
    
    for j=1:size(rightAxonConnNums{p},2)
        
        rightRunT=[rightRunT, rightAxonConnNums{p}(1,j)];
        rightRunP=[rightRunP,rightAxonConnNums{p}(2,j)];
        
    end
    
    if isnan(rightRunP)==1
    else
        
        rightTotCon(rightCounter)=sum(rightRunT);
        rightPNCon(rightCounter)=sum(rightRunP);
        rightCounter=rightCounter+1;
    end
end

%% Plotting

figure()
set(gcf, 'Color', 'w')


boxplot([ [leftTotCon(1:27)./leftLengths(1:27),rightTotCon(27:end)./rightLengths(27:end),...
   leftTotCon(28:end)./leftLengths(28:end),rightTotCon(1:26)./rightLengths(1:26) ]'], [ones(53,1); 2*ones(51,1)], 'Color', 'k')
% 
% meanConDensDiff=(mean([leftTotCon(1:27)./leftLengths(1:27),rightTotCon(27:end)./rightLengths(27:end)]')...
%     /mean([leftTotCon(28:end)./leftLengths(28:end),rightTotCon(1:26)./rightLengths(1:26) ]')-1)*100;
% 
% text(.75,.4*10^-3,[num2str(meanConDensDiff),'% diff between means' ])
ax=gca;
ax.XTickLabel={'ipsi axons','contra axons'};
ylabel('Connections per nm', 'Fontsize',16)
ylim([0 2*10^-3])
ax.YTick=[0:1*10^-3:2*10^-3];
ax.FontSize=16;
axis square

saveas(gcf,'ipsiContraConnDensity')
saveas(gcf,'ipsiContraConnDensity','png')


