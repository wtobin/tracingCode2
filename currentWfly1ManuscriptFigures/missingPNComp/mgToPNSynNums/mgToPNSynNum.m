% The goal here is to generate a two bar stacked bar graph where the bars
% represent the number of MG-->PN synapses each PN receives 

%% Load annotations and connectors
 clear

% Load annotations json. Generated by Wei's code gen_annotation_map.py
annotations=loadjson('~/tracing/sid_by_annotation.json');

% Return all skeleton IDs for R and L ORNs

ORNs_Left=annotations.Left_0x20_ORN;
ORNs_Right=annotations.Right_0x20_ORN;

ORNs=[ORNs_Left, ORNs_Right];

%return all skeleton IDs of DM6 PNs
PNs=sort(annotations.DM6_0x20_PN);


% return all skel IDs with *LN* in fieldname
Fn = fieldnames(annotations);
selFn = Fn(~cellfun(@isempty,regexp(Fn,'LN')));

LNs=[];
for i = 1:numel(selFn)
    LNs=[LNs, annotations.(selFn{i})];
end

LNs = unique(LNs);

%Load the connector structure
load('~/tracing/conns.mat')

%gen conn fieldname list
connFields=fieldnames(conns);

%% Collect a list of presynaptic profile skeleton IDs for each PN

%Loop over all PNs
for p=1:5
    
preSkel{p}=[];

%loop over all connectors
for i= 1 : length(connFields)
    
   %Make sure the connector doesnt have an empty presynaptic field
    if isempty(conns.(cell2mat(connFields(i))).pre) == 1 
        
   %or an empty postsynaptic field, if its empty it will be a cell
    elseif iscell(conns.(cell2mat(connFields(i))).post) == 1
        
    else
        
        %Check to see if the current PN is postsynaptic at this connector
        if sum(ismember(PNs(p), conns.(cell2mat(connFields(i))).post))>=1
            
            %record the presynaptic skel ID once for each time the PN is
            %postsynaptic
            
            for s=1:length(conns.(cell2mat(connFields(i))).post)
                
                if conns.(cell2mat(connFields(i))).post(s) == PNs(p)
                    
                    preSkel{p}=[preSkel{p}, conns.(cell2mat(connFields(i))).pre];
                    
                else
                end
            end
           
                
          
        else
        end
    end
end



end



%% Categorize presynaptic profiles

% Question, how many profiles can be accounted for as ORNs, PNs and LNs?


% Loop over each PN
for p=1:length(PNs)
    
    
    %loop over each presynaptic profile
for s=1:length(preSkel{p})
    
     if ismember(preSkel{p}(s), ORNs) == 1
                
                preSynID{p}(s)=1;
                
                
            elseif ismember(preSkel{p}(s), PNs) == 1
                
                 preSynID{p}(s)=2;
                
                
            elseif ismember(preSkel{p}(s), LNs) == 1
                
                 preSynID{p}(s)=3;
                
                
            else
                 preSynID{p}(s)=3 %4;
                
     end
    
end
end



%% Plotting

figure()
bar([[sum(preSynID{1}==3),sum(preSynID{2}==3),sum(preSynID{5}==3)];[0,sum(preSynID{4}==3),sum(preSynID{3}==3)]],.7, 'stacked')
set(gcf, 'Color', 'w')
colormap('winter')
ax=gca;
xlim([0 3]);
ax.XTick=[1:2];
ax.XTickLabel={'Left PNs', 'Right PNs'};
ax.FontSize=14;
ylabel('MG-->PN Contact Num', 'FontSize', 16);

axis square

saveas(gcf,'mgToPNSynNums')
saveas(gcf,'mgToPNSynNums','epsc')


