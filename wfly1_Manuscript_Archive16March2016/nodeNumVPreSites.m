% This is script to plot node num v presynaptic site num for DM6 ORNs

%% Load annotations and connectors

% Load annotations json. Generated by Wei's code gen_annotation_map.py
annotations=loadjson('~/tracing/sid_by_annotation.json');

% Return all skeleton IDs for R and L ORNs

ORNs_Left=annotations.Left_0x20_ORN;
ORNs_Right=annotations.Right_0x20_ORN;

%exclude unilateral ORNs for now

ORNs_Right(find(ORNs_Right == 499879))=[];
ORNs_Left(find(ORNs_Left == 426230))=[];
ORNs_Left(find(ORNs_Left == 401378))=[];
% 
% %exclude ORN 8 because it was temporarily unilateral on 8/5 for testing 
% ORNs_Left(find(ORNs_Left == 593865))=[];

ORNs=[ORNs_Left, ORNs_Right];

%return all skeleton IDs of DM6 PNs
PNs=annotations.PN;

%return all LN skel IDs
LNs=annotations.LN;
LNs=[LNs, annotations.potential_0x20_LN];
LNs=[LNs, annotations.Prospective_0x20_LN];
LNs=[LNs, annotations.Likely_0x20_LN];

%Load the connector structure
load('~/tracing/conns.mat')

%gen conn fieldname list
connFields=fieldnames(conns);

%% Collect a list of presynaptic profile skeleton IDs for each ORN

ORNs=[ORNs_Left,ORNs_Right];

%Loop over all ORNs

for o=1:length(ORNs)
    conCounter=1;


%loop over all connectors
for i= 1 : length(connFields)
    
    %Make sure the connector doesnt have an empty presynaptic field
    if isempty(conns.(cell2mat(connFields(i))).pre) == 1 
        
        % or an empty postsynaptic field, if its empty it will be a cell
        
    elseif iscell(conns.(cell2mat(connFields(i))).post) == 1
        
    else
        
        %Check to see if the current ORN is presynaptic at this connector
        if sum(ismember(ORNs(o), conns.(cell2mat(connFields(i))).pre))>=1
            
            %record the presynaptic skel ID once for each time the ORN is
            %postsynaptic
            
          
           conCounter=conCounter+1;
           
                
          
        else
        end
    end
end

preSites(o)=conCounter;


end

%% determine the number of skel nodes for each ORN

for o=1:length(ORNs);
    tic
    workingSkel=loadjson(['~/tracing/skeletons/',num2str(ORNs(o)),'.json']);
nodeNum(o)=length(fieldnames(workingSkel.vertices));
toc
end


%% Scatter plot node num V presynaptic sites


% Plotting
figure()
set(gcf, 'Color', 'w')

scatter(nodeNum(1:25),preSites(1:25), 'filled')
hold on
scatter(nodeNum(26:end),preSites(26:end), 'r', 'filled')
% xlim([0 .07])
% ylim([0 0.07])

xlabel('Node Number', 'FontSize', 16)
ylabel('Presynaptic Site Num', 'FontSize',16)
ax=gca;
ax.FontSize=16;

title('Node Number V Tbar Num','FontSize', 18)
legend({'Left ORNs','Right ORNs'}, 'FontSize', 16, 'Location', 'NorthWest')

%Statistics

[pRho, pP]=corr(nodeNum', preSites')

text(3800,55,{['Pearson''s R val: ', num2str(pRho)]; ['Pearson''s P val: ', num2str(pP)]}, 'FontSize', 16)

%% tbar density (#tbar/nodes) V. total tbar number

% Plotting
figure()
set(gcf, 'Color', 'w')

scatter((preSites(1:25)./nodeNum(1:25)),preSites(1:25), 'filled')
hold on
scatter((preSites(26:end)./nodeNum(26:end)),preSites(26:end), 'r', 'filled')
% xlim([0 .07])
% ylim([0 0.07])

xlabel('Tbar Density (Tbars/node)', 'FontSize', 16)
ylabel('Total Presynaptic Site Num', 'FontSize',16)
ax=gca;
ax.FontSize=16;

title('Tbar density V Tot Tbar Num','FontSize', 18)
legend({'Left ORNs','Right ORNs'}, 'FontSize', 16, 'Location', 'NorthWest')

%Statistics

[pRho, pP]=corr((preSites./nodeNum)', preSites');

text(.022,65,{['Pearson''s R val: ', num2str(pRho)]; ['Pearson''s P val: ', num2str(pP)]}, 'FontSize', 16)

%% Scatter plot node num V mean Fractional contribution to ORN-->PN synapse pool


% Plotting
figure()
set(gcf, 'Color', 'w')

scatter(nodeNum(1:25),preSites(1:25), 'filled')
hold on
scatter(nodeNum(26:end),preSites(26:end), 'r', 'filled')
% xlim([0 .07])
% ylim([0 0.07])

xlabel('Node Number', 'FontSize', 16)
ylabel('Presynaptic Site Num', 'FontSize',16)
ax=gca;
ax.FontSize=16;

title('Node Number V Tbar Num','FontSize', 18)
legend({'Left ORNs','Right ORNs'}, 'FontSize', 16, 'Location', 'NorthWest')

%Statistics

[pRho, pP]=corr(nodeNum', preSites')

text(3800,55,{['Pearson''s R val: ', num2str(pRho)]; ['Pearson''s P val: ', num2str(pP)]}, 'FontSize', 16)

%% tbar density (#tbar/nodes) V. total tbar number

% Plotting
figure()
set(gcf, 'Color', 'w')

scatter((preSites(1:25)./nodeNum(1:25)),preSites(1:25), 'filled')
hold on
scatter((preSites(26:end)./nodeNum(26:end)),preSites(26:end), 'r', 'filled')
% xlim([0 .07])
% ylim([0 0.07])

xlabel('Tbar Density (Tbars/node)', 'FontSize', 16)
ylabel('Total Presynaptic Site Num', 'FontSize',16)
ax=gca;
ax.FontSize=16;

title('Tbar density V Tot Tbar Num','FontSize', 18)
legend({'Left ORNs','Right ORNs'}, 'FontSize', 16, 'Location', 'NorthWest')

%Statistics

[pRho, pP]=corr((preSites./nodeNum)', preSites');

text(.022,65,{['Pearson''s R val: ', num2str(pRho)]; ['Pearson''s P val: ', num2str(pP)]}, 'FontSize', 16)

