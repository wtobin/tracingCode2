%% stacked bar chart showing number of PN synapses onto ORNs for left PNs
% (left bar, divided into three parts) and right PNs (right bar, divided into two parts)

%Load PN-->ORN connectivity data, generated by file panel6_unitaryContNums
%in Figure 1 directory

load('~/Dropbox/htem_team/code/wtobin/tracingCode2/wfly1_Manuscript/Figure1/pnToOrn.151231.mat')
leftPNToORN=[sum(pnToOrn(5,:)),sum(pnToOrn(1,:)),sum(pnToOrn(2,:))];
rightPNToORN=[sum(pnToOrn(3,:)),sum(pnToOrn(4,:)),0];

% % order leftPNs1-3: 1,2,5 and right PNs1-2: 4,3  % 151230 WCL corresponded to catmaid2
% load('~/Dropbox/htem_team/code/wtobin/tracingCode2/wfly1_Manuscript/Figure1/pnToOrn.mat')
% leftPNToORN=[sum(pnToOrn(1,:)),sum(pnToOrn(2,:)),sum(pnToOrn(5,:))];
% rightPNToORN=[sum(pnToOrn(4,:)),sum(pnToOrn(3,:)),0];

figure()
bar([leftPNToORN; rightPNToORN],.7, 'stacked')
set(gcf, 'Color', 'w')
colormap('winter')
ax=gca;
xlim([0 3]);
ax.XTick=[1:2];
ax.XTickLabel={'Left PNs', 'Right PNs'};
ax.FontSize=14;
ylabel('PN-->ORN Contact Num', 'FontSize', 16);
axis square

load('~/Dropbox/htem_team/code/wtobin/tracingCode2/wfly1_Manuscript/Figure1/pnToPn.151231.mat')
leftPNToPN=[sum(pnToPn(5,:)),sum(pnToPn(1,:)),sum(pnToPn(2,:))];
rightPNToPN=[sum(pnToPn(3,:)),sum(pnToPn(4,:)),0];

% load('~/Dropbox/htem_team/code/wtobin/tracingCode2/wfly1_Manuscript/Figure1/pnToPn.mat')
% leftPNToPN=[sum(pnToPn(1,:)),sum(pnToPn(2,:)),sum(pnToPn(5,:))];
% rightPNToPN=[sum(pnToPn(4,:)),sum(pnToPn(3,:)),0];

figure()
bar([leftPNToPN; rightPNToPN],.7, 'stacked')
set(gcf, 'Color', 'w')
colormap('winter')
ax=gca;
xlim([0 3]);
ylim([0 80]);
ax.XTick=[1:2];
ax.XTickLabel={'Left PNs', 'Right PNs'};
ax.FontSize=14;
ylabel('PN-->PN Contact Num', 'FontSize', 16);
axis square


load('~/Dropbox/htem_team/code/wtobin/tracingCode2/wfly1_Manuscript/Figure1/pnToLn.151231.mat')
leftPNToLN=[sum(pnToLn(5,:)),sum(pnToLn(1,:)),sum(pnToLn(2,:))];
rightPNToLN=[sum(pnToLn(3,:)),sum(pnToLn(4,:)),0];

% load('~/Dropbox/htem_team/code/wtobin/tracingCode2/wfly1_Manuscript/Figure1/pnToLn.mat')
% leftPNToLN=[sum(pnToLn(1,:)),sum(pnToLn(2,:)),sum(pnToLn(3,:))];
% rightPNToLN=[sum(pnToLn(4,:)),sum(pnToLn(3,:)),0];

figure()
bar([leftPNToLN; rightPNToLN],.7, 'stacked')
set(gcf, 'Color', 'w')
colormap('winter')
ax=gca;
xlim([0 3]);
% ylim([0 80]);
ax.XTick=[1:2];
ax.XTickLabel={'Left PNs', 'Right PNs'};
ax.FontSize=14;
ylabel('PN-->LN Contact Num', 'FontSize', 16);
axis square

%%
leftPNouts = [leftPNToLN(1),leftPNToORN(1),leftPNToPN(1), ...
    leftPNToLN(2),leftPNToORN(2),leftPNToPN(2), ...
    leftPNToLN(3),leftPNToORN(3),leftPNToPN(3) ...
    ]

rightPNouts = [rightPNToLN(1),rightPNToORN(1),rightPNToPN(1), ...
    rightPNToLN(2),rightPNToORN(2),rightPNToPN(2), ...
    rightPNToLN(3),rightPNToORN(3),rightPNToPN(3), ...
    ]

figure()
h=bar([leftPNouts; rightPNouts],.7, 'stacked');
set(gcf, 'Color', 'w')
h(1).FaceColor = [0 0 1];
h(2).FaceColor = [0 0 1];
h(3).FaceColor = [0 0 1];
h(4).FaceColor = [0 .51 .75];
h(5).FaceColor = [0 .51 .75];
h(6).FaceColor = [0 .51 .75];
h(7).FaceColor = [0 1 .5];
h(8).FaceColor = [0 1 .5];
h(9).FaceColor = [0 1 .5];
%im_hatchC = applyhatch_plusC(1,'\-x\-x\-x',[0 0 1;0 0 1;0 0 1; 0 .51 .75;0 .51 .75;0 .51 .75; 0 1 .5; 0 1 .5; 0 1 .5]);
% colormap('winter')
ax=gca;
xlim([0 3]);
ylim([0 1000]);
ax.XTick=[1:2];
ax.XTickLabel={'Left PNs', 'Right PNs'};
ax.FontSize=14;
ylabel('PN Output Contact Num', 'FontSize', 16);
axis square
%%
hPatch1 = findobj(h(9), 'Type', 'patch');
hh1 = hatchfill(hPatch1, 'single', -45, 3);

%%
figure;
bar(rand(3,6));
im_hatchC = applyhatch_plusC(gcf,'\-x\-x\-x',[0 0 1;0 0 1;0 0 1; 0 .51 .75;0 .51 .75;0 .51 .75; 0 1 .5; 0 1 .5; 0 1 .5]);

%%
figure;
bar(rand(3,4));
% [im_hatch,colorlist] = applyhatch_pluscolor(gcf,'\-x.',0,0,[],150);
[im_hatch,colorlist] = applyhatch_pluscolor(gcf,'\-x.',1,[],[],150);
%%
load('~/Dropbox/htem_team/code/wtobin/tracingCode2/wfly1_Manuscript/lnToPn.mat')

leftPNToPN=[sum(pnToPn(5,:)),sum(pnToPn(1,:)),sum(pnToPn(2,:))];

rightPNToPN=[sum(pnToPn(3,:)),sum(pnToPn(4,:)),0];


figure()
bar([leftPNToPN; rightPNToPN], 'stacked')
set(gcf, 'Color', 'w')
colormap('winter')
ax=gca;
xlim([0 3]);
ax.XTick=[1:2];
ax.XTickLabel={'Left PNs', 'Right PNs'};
ax.FontSize=16;
ylabel('PN-->PN Contact Num', 'FontSize', 16);

%% I would also like to look at the overall number of outputs each PN makes
%% Load annotations and connectors

% Load annotations json. Generated by Wei's code gen_annotation_map.py
annotations=loadjson('~/Dropbox/htem_team/analysis/wfly1/tracing/sid_by_annotation.json');

% Return all skeleton IDs for R and L ORNs

ORNs_Left=annotations.Left_0x20_ORN;
ORNs_Right=annotations.Right_0x20_ORN;

%exclude unilateral ORNs for now

ORNs_Right(find(ORNs_Right == 499879))=[];
% ORNs_Left(find(ORNs_Left == 426230))=[];
ORNs_Left(find(ORNs_Left == 401378))=[];
% 
% %exclude ORN 8 because it was temporarily unilateral on 8/5 for testing 
% ORNs_Left(find(ORNs_Left == 593865))=[];

ORNs=[ORNs_Left, ORNs_Right];

%return all skeleton IDs of DM6 PNs
% PNs=annotations.PN;
PNs=sort(annotations.DM6_0x20_PN);

% return all skel IDs with *LN* in fieldname
Fn = fieldnames(annotations);
selFn = Fn(~cellfun(@isempty,regexp(Fn,'LN')));

LNs=[];
for i = 1:numel(selFn)
    LNs=[LNs, annotations.(selFn{i})];
end

LNs = unique(LNs);

%
% LNs=annotations.LN;
% LNs=[LNs, annotations.potential_0x20_LN];
% LNs=[LNs, annotations.Prospective_0x20_LN];
% LNs=[LNs, annotations.Likely_0x20_LN];

%Load the connector structure
load('~/Dropbox/htem_team/analysis/wfly1/tracing/conns.mat')

%gen conn fieldname list
connFields=fieldnames(conns);


%Loop over all PNs
for p=1:numel(PNs)
    
presynCounter=1;

%loop over all connectors
for i= 1 : length(connFields)
    
   %Make sure the connector doesnt have an empty presynaptic field
    if isempty(conns.(cell2mat(connFields(i))).pre) == 1 
        
   %or an empty postsynaptic field, if its empty it will be a cell
    elseif iscell(conns.(cell2mat(connFields(i))).post) == 1
        
    else
        
        %Check to see if the current PN is presynaptic at this connector
        if sum(ismember(PNs(p), conns.(cell2mat(connFields(i))).pre))>=1
            presynCounter=presynCounter+1;
           
                
          
        else
        end
    end
end

numOut(p)=presynCounter;

end



figure()
bar([numOut([5,1,2]);  [numOut([3,4]),0]], 'stacked')
set(gcf, 'Color', 'w')
colormap('winter')
ax=gca;
xlim([0 3]);
ax.XTick=[1:2];
ax.XTickLabel={'Left PNs', 'Right PNs'};
ax.FontSize=16;
ylabel('Presynaptic sites', 'FontSize', 16);
title('Overall number of PN presynaptic sites', 'FontSize', 16)
