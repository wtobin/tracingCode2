% Load neuron skeleton IDs

% Load annotations json. Generated by Wei's code gen_annotation_map.py
annotations=loadjson('~/tracing/sid_by_annotation.json');

% Return all skeleton IDs for R and L ORNs

ORNs_Left=annotations.Left_0x20_ORN;
ORNs_Right=annotations.Right_0x20_ORN;

%exclude unilateral ORNs for now

ORNs_Right(find(ORNs_Right == 499879))=[];
ORNs_Left(find(ORNs_Left == 426230))=[];
ORNs_Left(find(ORNs_Left == 401378))=[];

%return all skeleton IDs of DM6 PNs
PNs=annotations.PN;



%Collect the real CAPL information for R ORNs

for p= 1:numel(PNs)
    
    workingPN=loadjson(strcat('~/tracing/skeletons/', num2str(PNs(p)),'.json'));
    [ edgeMatrix, verts ] = getSkelAdjMat_DW( workingPN );
    
    %find the primary branch point on the working PN (integrator)
    
    for i=1:length(verts);
        if isempty(workingPN.vertices.(cell2mat(verts(i))).labels) == 1
            
        elseif strcmp(cell2mat(workingPN.vertices.(cell2mat(verts(i))).labels), 'primary branch point') == 1
            
            integrator=verts(i);
        else
            
        end
    end
    
    
    
    
    for o=1:numel(ORNs_Right)
        
        workingORN=ORNs_Right(o);
        inputSyns=getSynapseVerts(workingPN,workingORN);
        
        
        [realMeanDistsR(p,o), realStdDistR(p,o),...
            realPathsToIntegratorR{p}{o}, realPathsR{p}{o}]...
            =meanPathToIntegrator(workingPN,edgeMatrix,verts,inputSyns,integrator);
    end
    
end



cd('~/Documents/MATLAB/tracingCode2/ORNSynShuffSim/ipsiContaShuff/')
save('realMeanDistsR', 'realMeanDistsR')
save('realStdDistR', 'realStdDistR')
save('realPathsToIntegratorR', 'realPathsToIntegratorR')
save('realPathsR','realPathsR')




%Collect the real CAPL information for L ORNs

for p= 1:numel(PNs)
    
    workingPN=loadjson(strcat('~/tracing/skeletons/', num2str(PNs(p)),'.json'));
    [ edgeMatrix, verts ] = getSkelAdjMat_DW( workingPN );
    
    %find the primary branch point on the working PN (integrator)
    
    for i=1:length(verts);
        if isempty(workingPN.vertices.(cell2mat(verts(i))).labels) == 1
            
        elseif strcmp(cell2mat(workingPN.vertices.(cell2mat(verts(i))).labels), 'primary branch point') == 1
            
            integrator=verts(i);
        else
            
        end
    end
    
    
    
    
    for o=1:numel(ORNs_Left)
        
          workingORN=ORNs_Left(o);
        inputSyns=getSynapseVerts(workingPN,workingORN);
        
        
         [realMeanDistsL(p,o), realStdDistL(p,o),...
             realPathsToIntegratorL{p}{o}, realPathsL{p}{o}]...
             =meanPathToIntegrator(workingPN,edgeMatrix,verts,inputSyns,integrator);
    end
    
end



cd('~/Documents/MATLAB/tracingCode2/ORNSynShuffSim/ipsiContaShuff/')
save('realMeanDistsL', 'realMeanDistsL')
save('realStdDistL', 'realStdDistL')
save('realPathsToIntegratorL', 'realPathsToIntegratorL')
save('realPathsL','realPathsL')


