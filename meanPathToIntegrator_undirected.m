function [ meanPathLength, pathLengthStd, pathLengthsToIntegrator, paths ] = meanPathToIntegrator( workingSkel, edgeMatrix, skelVertNames, synVerts, integrator )
% This function calculates the contact averaged path length between the
% synapses represented by synVerts and the node indicated by the
% integrator.

%workingSkel:post-synaptic skeleton structure generated by loading a
% skeleton file from ~/tracing/skeletons with loadjson

%edgeMatrix: an edge matrix produced by feeding workingSkel into
%getSkelAdjMat_DW

% skelVertNames: a list of workingSkel nodes in the same order as they are
% represented in the adjacency(edge) matrix. Also produced by getSkelAdjMat

%synVerts: a cell array containing workingSkel.verticies fieldnames that
%represent locations at which workingSkel recieves input from a neuron.
%Produced by getSynapseVerts

%integrator: a cell containing a workingSkel.verticies fieldname 

% This function will calculate the mean, shortest path
% euclidean distance between each of these synVerts and the integrator node.



% %Construct a sparse matrix from the workingSkel edge matrix
sparseEdgeMatrix=sparse(edgeMatrix);

for s=1:length(synVerts)
    
    [dist, path]=graphshortestpath(sparseEdgeMatrix,find(strcmp(skelVertNames,synVerts(s))),find(strcmp(skelVertNames,integrator)), 'Directed', 'false', 'Method', 'Acyclic');
    
    pLength=0;
    for p=1:length(path)-1
        
        points(1,1)=workingSkel.vertices.(cell2mat(skelVertNames(path(p)))).x;
        points(1,2)=workingSkel.vertices.(cell2mat(skelVertNames(path(p)))).y;
        points(1,3)=workingSkel.vertices.(cell2mat(skelVertNames(path(p)))).z;
        
        points(2,1)=workingSkel.vertices.(cell2mat(skelVertNames(path(p+1)))).x;
        points(2,2)=workingSkel.vertices.(cell2mat(skelVertNames(path(p+1)))).y;
        points(2,3)=workingSkel.vertices.(cell2mat(skelVertNames(path(p+1)))).z;

        
        pLength=pLength+pdist(points);
        
    end
    
    pathLengthsToIntegrator(s)=pLength;
    paths{s}=skelVertNames(path);
    
end

    meanPathLength=mean(pathLengthsToIntegrator);
    pathLengthStd=std(pathLengthsToIntegrator);
    
end

