%{
Ok some pseudocode

1. Create list of the left and right ORNs for which i have measured synapse
size

2. Copy all connectorID_initials.nii segmention files to a single directory

3. For each ORN-PN pair, Search through the connector list and at each
connector where the cells are connected, pull the tbar volume and
postsynaptic membrane area. Store these measures in an array thats like
array(orn,pn,1)=tbarArea array(orn, p,2)=membrane area

4. Compare ipsi/contra, left right sizes and test significance





%}

%% make lists of ORNs and PNs that have been segmented, load conn list

leftORNSubset=[337396,401197,492811,320688,699676];
rightORNSubset=[360235,362982,332797,379044,362999];

% Load annotations json. Generated by Wei's code gen_annotation_map.py
annotations=loadjson('~/tracing/sid_by_annotation.json');

%return all skeleton IDs of DM6 PNs
PNs=sort(annotations.DM6_0x20_PN);

%Load the connector structure
load('~/tracing/conns.mat')

%gen conn fieldname list
connFields=fieldnames(conns);

%%
%{
For each ORN-PN pair, Search through the connector list and at each
connector where the cells are connected, pull the tbar volume and
postsynaptic membrane area. Store these measures in an array thats like
array(orn,pn,1)=tbarArea array(orn, p,2)=membrane area
%}

tbarLabel=6;
basePath='/Users/williamtobin/Desktop/wfly1_synapseVols2/segFiles/';
elementSizes=cell(10,5,4);
segIDs=cell(10,5,4);
Users={'JK','HY','BS','WC'};
ratioCollection=[];



%Loop over tracers
for u=1:4
    
    u
    ornCounter=0;
    
    %Loop over ORNs
    for o = [leftORNSubset, rightORNSubset]
        tic
        ornCounter=ornCounter+1;
        pnCounter=0;
        
        %Loop over PNs
        for p = PNs
            pnCounter=pnCounter+1;
            
            %Assign the current PN's itk snap segmentation label to the
            %postLabel variable
            
            if p == 427345
                postLabel=1;
            elseif p == 419138
                postLabel=2;
            elseif p ==668267
                postLabel=3;
            elseif p==480245
                postLabel=4;
            elseif p==638603
                postLabel=5;
            end
            
            synCounter=0;
            
            %Loop over all connectors in the dataset
            for curField = 1:length(connFields)
                
                c=connFields(curField);
                
                %Store connID
                connID=cell2mat(c);
                connID=connID([5,7:length(connID)]);
                
                %Store skel IDs of pre and postsynaptic neurons at this
                %synapse
                pre=conns.(cell2mat(c)).pre;
                post=conns.(cell2mat(c)).post;
                
                %Make sure there is a presynaptic neuron at this conn
                if isempty(pre)==1
                else
                    %Check to see if the current ORN is presynaptic and the
                    %current PN postsynaptic
                    
                    if pre == o && ismember(p,post)==1
                        
                        %If so store a list of the seg files we have for
                        %this connector
                        curSegFileDir=dir([basePath,connID,'_**.nii']);
                        
                        %A flag to indicate whether this tracer has
                        %segmented this synapse or not
                        segFlag=0;
                        
                        
                        %If there are any
                        if isempty(curSegFileDir)==1
                           
                            disp('Weird, no files for this syn')
                            
                        else
                            
                            %Loop over each
                            for f =1:length(curSegFileDir)
                                
                                %See if the current tracer was the author
                                if sum(curSegFileDir(f).name(end-5:end-4)==Users{u})==2
                                    
                                    segFlag=1;
                                    
                                    %If so,
                                    %Increment synapse count
                                    synCounter=synCounter+1;
                                    
                                    %load the connector segmentation
                                    %file,assgn seg mask to variable
                                    curSegFile=load_nii([basePath, curSegFileDir(f).name]);
                                    segStack=curSegFile.img;
                                    
                                    %calculate the ratio of edge pixel num
                                    %to total seg mask pixel number for the
                                    %pn segmentation in each plane it is
                                    %present. Also store bw masks for
                                    %current PN membrane in masks
                                    
                                    [masks,ratios]=maskEdgeToIntRatio(curSegFile.img,postLabel);
                                    
                                    ratioCollection=[ratioCollection,ratios(ratios~=0)];
                                    
                                    %Here I will calculate tbar volume and
                                    %pn membrane area across all slices in
                                    %the segmentation stack
                                    
                                    pnArea=0;
                                    tbarVol=0;
                                    
                                    %For each layer of the segmentation stack
                                    for s=1:size(segStack,3)
                                        
                                        %if the PN is present at the
                                        %synapse in this layer
                                        if sum(sum(segStack(:,:,s)==postLabel))>0
                                            
                                            
                                            if ratios(s)>.8 %If the membrane is segmented as a line
                                                skMask=bwmorph(masks(:,:,s),'skel',Inf);
                                                numPx=sum(sum(skMask==1));
                                                pxLength=numPx*4;
                                                %Here I am adding the area
                                                %of PN membrane (in nm^2)
                                                %in the current
                                                %section to our running sum
                                                
                                                pnArea=pnArea+(pxLength*40);
                                                
                                                
                                            else %If the membrane is segmented as a polygon
                                                numPx=sum(sum(masks(:,:,s)==1));
                                                %To get the area of a
                                                %polygon I am multiplying
                                                %pixel number by the widht
                                                %and heigh of a pixel
                                                pxArea=numPx*4*4;
                                                %Here I am adding the area
                                                %of PN membrane (in nm^2)
                                                %in the current
                                                %section to our running sum
                                                pnArea=pnArea+pxArea;
                                                
                                            end
                                            
                                        end
                                        
                                        
                                        %if the Tbar is present at the
                                        %synapse in this layer
                                        if sum(sum(segStack(:,:,s)==tbarLabel))>0
                                            
                                            %determine number of tbar
                                            %pixels in this frame
                                            numPx=sum(sum(segStack(:,:,s)==tbarLabel));
                                            
                                            %Multiply pixel number by pixel
                                            %width,height and section depth
                                            %to get volume in nm^3
                                            vol=numPx*4*4*40;
                                            tbarVol=tbarVol+vol;
                                        else
                                        end
                                    end
                                    
                                    %Store volume and area for this synapse
                                    elementSizes{ornCounter,pnCounter,u}(synCounter,1)=tbarVol;
                                    elementSizes{ornCounter,pnCounter,u}(synCounter,2)=pnArea;
                                    elementSizes{ornCounter,pnCounter,u}(synCounter,3)=numel(post);
                                    elementSizes{ornCounter,pnCounter,u}(synCounter,4)=sum(ismember(post,PNs));
                                    segIDs{ornCounter,pnCounter}(synCounter)=c;
                                     
                                end
                                
                                
                            end
                            
                            
                        end
                        
                        %If this user has not segmented this
                        %synapse fill this slot with Nans to keep
                        %connection matricies the same size
                        if segFlag==0
                            
                            %Increment synapse count
                            synCounter=synCounter+1;
                            
                            %Store volume and area for this synapse
                            elementSizes{ornCounter,pnCounter,u}(synCounter,1)=nan;
                            elementSizes{ornCounter,pnCounter,u}(synCounter,2)=nan;
                            elementSizes{ornCounter,pnCounter,u}(synCounter,3)=nan;
                            elementSizes{ornCounter,pnCounter,u}(synCounter,4)=nan;
                            
                        else
                        end
                        
                        
                    end
                    
                end
            end
        end
        
        
        toc
    end
    
    
end

